/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v4`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Department
 */


public class Department {
  @SerializedName("departmentId")
  private Integer departmentId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("color")
  private String color = null;

  public Department departmentId(Integer departmentId) {
    this.departmentId = departmentId;
    return this;
  }

   /**
   * The department ID
   * @return departmentId
  **/
  @Schema(description = "The department ID")
  public Integer getDepartmentId() {
    return departmentId;
  }

  public void setDepartmentId(Integer departmentId) {
    this.departmentId = departmentId;
  }

  public Department name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the department
   * @return name
  **/
  @Schema(description = "Name of the department")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Department color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Hex color assigned to department for display
   * @return color
  **/
  @Schema(description = "Hex color assigned to department for display")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Department department = (Department) o;
    return Objects.equals(this.departmentId, department.departmentId) &&
        Objects.equals(this.name, department.name) &&
        Objects.equals(this.color, department.color);
  }

  @Override
  public int hashCode() {
    return Objects.hash(departmentId, name, color);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Department {\n");
    
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
