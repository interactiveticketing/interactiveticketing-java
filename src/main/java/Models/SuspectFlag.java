/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v4`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SuspectFlag
 */


public class SuspectFlag {
  @SerializedName("suspectFlagId")
  private Integer suspectFlagId = null;

  @SerializedName("orderId")
  private Integer orderId = null;

  @SerializedName("suspectFilterId")
  private Integer suspectFilterId = null;

  @SerializedName("resolved")
  private Boolean resolved = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("_reason")
  private String _reason = null;

  public SuspectFlag suspectFlagId(Integer suspectFlagId) {
    this.suspectFlagId = suspectFlagId;
    return this;
  }

   /**
   * The flag ID
   * @return suspectFlagId
  **/
  @Schema(description = "The flag ID")
  public Integer getSuspectFlagId() {
    return suspectFlagId;
  }

  public void setSuspectFlagId(Integer suspectFlagId) {
    this.suspectFlagId = suspectFlagId;
  }

  public SuspectFlag orderId(Integer orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * The order ID
   * @return orderId
  **/
  @Schema(description = "The order ID")
  public Integer getOrderId() {
    return orderId;
  }

  public void setOrderId(Integer orderId) {
    this.orderId = orderId;
  }

  public SuspectFlag suspectFilterId(Integer suspectFilterId) {
    this.suspectFilterId = suspectFilterId;
    return this;
  }

   /**
   * The the suspicious filter ID
   * @return suspectFilterId
  **/
  @Schema(description = "The the suspicious filter ID")
  public Integer getSuspectFilterId() {
    return suspectFilterId;
  }

  public void setSuspectFilterId(Integer suspectFilterId) {
    this.suspectFilterId = suspectFilterId;
  }

  public SuspectFlag resolved(Boolean resolved) {
    this.resolved = resolved;
    return this;
  }

   /**
   * True indicates if a suspicous order was approved in the dashboard
   * @return resolved
  **/
  @Schema(description = "True indicates if a suspicous order was approved in the dashboard")
  public Boolean isResolved() {
    return resolved;
  }

  public void setResolved(Boolean resolved) {
    this.resolved = resolved;
  }

  public SuspectFlag notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * The optional notes
   * @return notes
  **/
  @Schema(description = "The optional notes")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public SuspectFlag _reason(String _reason) {
    this._reason = _reason;
    return this;
  }

   /**
   * A message describing the reason order is flagged as suspicious
   * @return _reason
  **/
  @Schema(description = "A message describing the reason order is flagged as suspicious")
  public String getReason() {
    return _reason;
  }

  public void setReason(String _reason) {
    this._reason = _reason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuspectFlag suspectFlag = (SuspectFlag) o;
    return Objects.equals(this.suspectFlagId, suspectFlag.suspectFlagId) &&
        Objects.equals(this.orderId, suspectFlag.orderId) &&
        Objects.equals(this.suspectFilterId, suspectFlag.suspectFilterId) &&
        Objects.equals(this.resolved, suspectFlag.resolved) &&
        Objects.equals(this.notes, suspectFlag.notes) &&
        Objects.equals(this._reason, suspectFlag._reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suspectFlagId, orderId, suspectFilterId, resolved, notes, _reason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuspectFlag {\n");
    
    sb.append("    suspectFlagId: ").append(toIndentedString(suspectFlagId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    suspectFilterId: ").append(toIndentedString(suspectFilterId)).append("\n");
    sb.append("    resolved: ").append(toIndentedString(resolved)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    _reason: ").append(toIndentedString(_reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
