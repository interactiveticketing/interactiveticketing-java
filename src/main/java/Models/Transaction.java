/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v1`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Transaction
 */

public class Transaction {

  @SerializedName("transactionId")
  private Integer transactionId = null;

  @SerializedName("dateTime")
  private String dateTime = null;

  @SerializedName("isRefund")
  private Boolean isRefund = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("cardTransactionId")
  private String cardTransactionId = null;

  @SerializedName("cardType")
  private String cardType = null;

  @SerializedName("cardLastFour")
  private String cardLastFour = null;

  @SerializedName("cardName")
  private String cardName = null;

  @SerializedName("referenceTransactionId")
  private String referenceTransactionId = null;

  @SerializedName("billStreet")
  private String billStreet = null;

  @SerializedName("billCity")
  private String billCity = null;

  @SerializedName("billStateProvince")
  private String billStateProvince = null;

  @SerializedName("billPostalCode")
  private String billPostalCode = null;

  @SerializedName("billCountry")
  private String billCountry = null;

  @SerializedName("refundReason")
  private String refundReason = null;
  public Transaction transactionId(Integer transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  

  /**
  * The transaction ID
  * @return transactionId
  **/
  @Schema(description = "The transaction ID")
  public Integer getTransactionId() {
    return transactionId;
  }
  public void setTransactionId(Integer transactionId) {
    this.transactionId = transactionId;
  }
  public Transaction dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  

  /**
  * The transaction time iso-8601
  * @return dateTime
  **/
  @Schema(description = "The transaction time iso-8601")
  public String getDateTime() {
    return dateTime;
  }
  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }
  public Transaction isRefund(Boolean isRefund) {
    this.isRefund = isRefund;
    return this;
  }

  

  /**
  * The transaction is a refund
  * @return isRefund
  **/
  @Schema(description = "The transaction is a refund")
  public Boolean isIsRefund() {
    return isRefund;
  }
  public void setIsRefund(Boolean isRefund) {
    this.isRefund = isRefund;
  }
  public Transaction amount(String amount) {
    this.amount = amount;
    return this;
  }

  

  /**
  * The transaction amount
  * @return amount
  **/
  @Schema(description = "The transaction amount")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }
  public Transaction type(String type) {
    this.type = type;
    return this;
  }

  

  /**
  * credit | cash | other | triPos
  * @return type
  **/
  @Schema(description = "credit | cash | other | triPos")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
  public Transaction cardTransactionId(String cardTransactionId) {
    this.cardTransactionId = cardTransactionId;
    return this;
  }

  

  /**
  * The payment gateway transaction identifier
  * @return cardTransactionId
  **/
  @Schema(description = "The payment gateway transaction identifier")
  public String getCardTransactionId() {
    return cardTransactionId;
  }
  public void setCardTransactionId(String cardTransactionId) {
    this.cardTransactionId = cardTransactionId;
  }
  public Transaction cardType(String cardType) {
    this.cardType = cardType;
    return this;
  }

  

  /**
  * The payment credit card type code
  * @return cardType
  **/
  @Schema(description = "The payment credit card type code")
  public String getCardType() {
    return cardType;
  }
  public void setCardType(String cardType) {
    this.cardType = cardType;
  }
  public Transaction cardLastFour(String cardLastFour) {
    this.cardLastFour = cardLastFour;
    return this;
  }

  

  /**
  * The payment credit card last four digits
  * @return cardLastFour
  **/
  @Schema(description = "The payment credit card last four digits")
  public String getCardLastFour() {
    return cardLastFour;
  }
  public void setCardLastFour(String cardLastFour) {
    this.cardLastFour = cardLastFour;
  }
  public Transaction cardName(String cardName) {
    this.cardName = cardName;
    return this;
  }

  

  /**
  * The payment credit card customer name on card
  * @return cardName
  **/
  @Schema(description = "The payment credit card customer name on card")
  public String getCardName() {
    return cardName;
  }
  public void setCardName(String cardName) {
    this.cardName = cardName;
  }
  public Transaction referenceTransactionId(String referenceTransactionId) {
    this.referenceTransactionId = referenceTransactionId;
    return this;
  }

  

  /**
  * Applicable to refund transaction, reference to the original &#x60;cardTransactionId&#x60;
  * @return referenceTransactionId
  **/
  @Schema(description = "Applicable to refund transaction, reference to the original `cardTransactionId`")
  public String getReferenceTransactionId() {
    return referenceTransactionId;
  }
  public void setReferenceTransactionId(String referenceTransactionId) {
    this.referenceTransactionId = referenceTransactionId;
  }
  public Transaction billStreet(String billStreet) {
    this.billStreet = billStreet;
    return this;
  }

  

  /**
  * Billing street address
  * @return billStreet
  **/
  @Schema(description = "Billing street address")
  public String getBillStreet() {
    return billStreet;
  }
  public void setBillStreet(String billStreet) {
    this.billStreet = billStreet;
  }
  public Transaction billCity(String billCity) {
    this.billCity = billCity;
    return this;
  }

  

  /**
  * Billing city
  * @return billCity
  **/
  @Schema(description = "Billing city")
  public String getBillCity() {
    return billCity;
  }
  public void setBillCity(String billCity) {
    this.billCity = billCity;
  }
  public Transaction billStateProvince(String billStateProvince) {
    this.billStateProvince = billStateProvince;
    return this;
  }

  

  /**
  * Billing state or province
  * @return billStateProvince
  **/
  @Schema(description = "Billing state or province")
  public String getBillStateProvince() {
    return billStateProvince;
  }
  public void setBillStateProvince(String billStateProvince) {
    this.billStateProvince = billStateProvince;
  }
  public Transaction billPostalCode(String billPostalCode) {
    this.billPostalCode = billPostalCode;
    return this;
  }

  

  /**
  * Billing post code / zip
  * @return billPostalCode
  **/
  @Schema(description = "Billing post code / zip")
  public String getBillPostalCode() {
    return billPostalCode;
  }
  public void setBillPostalCode(String billPostalCode) {
    this.billPostalCode = billPostalCode;
  }
  public Transaction billCountry(String billCountry) {
    this.billCountry = billCountry;
    return this;
  }

  

  /**
  * Billing country
  * @return billCountry
  **/
  @Schema(description = "Billing country")
  public String getBillCountry() {
    return billCountry;
  }
  public void setBillCountry(String billCountry) {
    this.billCountry = billCountry;
  }
  public Transaction refundReason(String refundReason) {
    this.refundReason = refundReason;
    return this;
  }

  

  /**
  * Applicable to refund transactions
  * @return refundReason
  **/
  @Schema(description = "Applicable to refund transactions")
  public String getRefundReason() {
    return refundReason;
  }
  public void setRefundReason(String refundReason) {
    this.refundReason = refundReason;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.transactionId, transaction.transactionId) &&
        Objects.equals(this.dateTime, transaction.dateTime) &&
        Objects.equals(this.isRefund, transaction.isRefund) &&
        Objects.equals(this.amount, transaction.amount) &&
        Objects.equals(this.type, transaction.type) &&
        Objects.equals(this.cardTransactionId, transaction.cardTransactionId) &&
        Objects.equals(this.cardType, transaction.cardType) &&
        Objects.equals(this.cardLastFour, transaction.cardLastFour) &&
        Objects.equals(this.cardName, transaction.cardName) &&
        Objects.equals(this.referenceTransactionId, transaction.referenceTransactionId) &&
        Objects.equals(this.billStreet, transaction.billStreet) &&
        Objects.equals(this.billCity, transaction.billCity) &&
        Objects.equals(this.billStateProvince, transaction.billStateProvince) &&
        Objects.equals(this.billPostalCode, transaction.billPostalCode) &&
        Objects.equals(this.billCountry, transaction.billCountry) &&
        Objects.equals(this.refundReason, transaction.refundReason);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(transactionId, dateTime, isRefund, amount, type, cardTransactionId, cardType, cardLastFour, cardName, referenceTransactionId, billStreet, billCity, billStateProvince, billPostalCode, billCountry, refundReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    isRefund: ").append(toIndentedString(isRefund)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    cardTransactionId: ").append(toIndentedString(cardTransactionId)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    cardLastFour: ").append(toIndentedString(cardLastFour)).append("\n");
    sb.append("    cardName: ").append(toIndentedString(cardName)).append("\n");
    sb.append("    referenceTransactionId: ").append(toIndentedString(referenceTransactionId)).append("\n");
    sb.append("    billStreet: ").append(toIndentedString(billStreet)).append("\n");
    sb.append("    billCity: ").append(toIndentedString(billCity)).append("\n");
    sb.append("    billStateProvince: ").append(toIndentedString(billStateProvince)).append("\n");
    sb.append("    billPostalCode: ").append(toIndentedString(billPostalCode)).append("\n");
    sb.append("    billCountry: ").append(toIndentedString(billCountry)).append("\n");
    sb.append("    refundReason: ").append(toIndentedString(refundReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
