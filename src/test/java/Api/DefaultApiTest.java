/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v1`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Api;

import InteractiveTicketing.ApiException;
import Models.Event;
import Models.Order;
import Models.PaginatedOrders;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Single Event
     *
     * Get single event with &#x60;eventId&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventsEventIdGetTest() throws ApiException {
        Long eventId = null;
        Event response = api.eventsEventIdGet(eventId);

        // TODO: test validations
    }
    /**
     * Search Orders
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventsEventIdOrdersGetTest() throws ApiException {
        Integer eventId = null;
        Integer fromOrderId = null;
        Integer start = null;
        Integer limit = null;
        Boolean testMode = null;
        String orderType = null;
        PaginatedOrders response = api.eventsEventIdOrdersGet(eventId, fromOrderId, start, limit, testMode, orderType);

        // TODO: test validations
    }
    /**
     * Single Order
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventsEventIdOrdersOrderIdGetTest() throws ApiException {
        Long eventId = null;
        Long orderId = null;
        Order response = api.eventsEventIdOrdersOrderIdGet(eventId, orderId);

        // TODO: test validations
    }
    /**
     * All Events
     *
     * Get list of all events with their &#x60;eventId&#x60; for your user key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventsGetTest() throws ApiException {
        List<Event> response = api.eventsGet();

        // TODO: test validations
    }
}
