/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v1`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Device
 */

public class Device {

  @SerializedName("deviceId")
  private Integer deviceId = null;

  @SerializedName("lastConnectTime")
  private String lastConnectTime = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("app")
  private String app = null;

  @SerializedName("appVersion")
  private String appVersion = null;

  @SerializedName("_displayName")
  private String _displayName = null;

  @SerializedName("_os")
  private String _os = null;
  public Device deviceId(Integer deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  

  /**
  * The scanning device ID
  * @return deviceId
  **/
  @Schema(description = "The scanning device ID")
  public Integer getDeviceId() {
    return deviceId;
  }
  public void setDeviceId(Integer deviceId) {
    this.deviceId = deviceId;
  }
  public Device lastConnectTime(String lastConnectTime) {
    this.lastConnectTime = lastConnectTime;
    return this;
  }

  

  /**
  * The device last sync time iso-8601
  * @return lastConnectTime
  **/
  @Schema(description = "The device last sync time iso-8601")
  public String getLastConnectTime() {
    return lastConnectTime;
  }
  public void setLastConnectTime(String lastConnectTime) {
    this.lastConnectTime = lastConnectTime;
  }
  public Device ip(String ip) {
    this.ip = ip;
    return this;
  }

  

  /**
  * The device last IP address
  * @return ip
  **/
  @Schema(description = "The device last IP address")
  public String getIp() {
    return ip;
  }
  public void setIp(String ip) {
    this.ip = ip;
  }
  public Device app(String app) {
    this.app = app;
    return this;
  }

  

  /**
  * The device app type
  * @return app
  **/
  @Schema(description = "The device app type")
  public String getApp() {
    return app;
  }
  public void setApp(String app) {
    this.app = app;
  }
  public Device appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  

  /**
  * The device app version
  * @return appVersion
  **/
  @Schema(description = "The device app version")
  public String getAppVersion() {
    return appVersion;
  }
  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }
  public Device _displayName(String _displayName) {
    this._displayName = _displayName;
    return this;
  }

  

  /**
  * The device label
  * @return _displayName
  **/
  @Schema(description = "The device label")
  public String getDisplayName() {
    return _displayName;
  }
  public void setDisplayName(String _displayName) {
    this._displayName = _displayName;
  }
  public Device _os(String _os) {
    this._os = _os;
    return this;
  }

  

  /**
  * The device OS
  * @return _os
  **/
  @Schema(description = "The device OS")
  public String getOs() {
    return _os;
  }
  public void setOs(String _os) {
    this._os = _os;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Device device = (Device) o;
    return Objects.equals(this.deviceId, device.deviceId) &&
        Objects.equals(this.lastConnectTime, device.lastConnectTime) &&
        Objects.equals(this.ip, device.ip) &&
        Objects.equals(this.app, device.app) &&
        Objects.equals(this.appVersion, device.appVersion) &&
        Objects.equals(this._displayName, device._displayName) &&
        Objects.equals(this._os, device._os);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(deviceId, lastConnectTime, ip, app, appVersion, _displayName, _os);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Device {\n");
    
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    lastConnectTime: ").append(toIndentedString(lastConnectTime)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    _displayName: ").append(toIndentedString(_displayName)).append("\n");
    sb.append("    _os: ").append(toIndentedString(_os)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
