/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v4`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CartEmail
 */


public class CartEmail {
  @SerializedName("cartEmailId")
  private Integer cartEmailId = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("cartData")
  private Object cartData = null;

  public CartEmail cartEmailId(Integer cartEmailId) {
    this.cartEmailId = cartEmailId;
    return this;
  }

   /**
   * The ID
   * @return cartEmailId
  **/
  @Schema(description = "The ID")
  public Integer getCartEmailId() {
    return cartEmailId;
  }

  public void setCartEmailId(Integer cartEmailId) {
    this.cartEmailId = cartEmailId;
  }

  public CartEmail createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The time user submitted their email address
   * @return createdAt
  **/
  @Schema(description = "The time user submitted their email address")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CartEmail email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Customer email address
   * @return email
  **/
  @Schema(description = "Customer email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CartEmail cartData(Object cartData) {
    this.cartData = cartData;
    return this;
  }

   /**
   * Raw Cart Data collected
   * @return cartData
  **/
  @Schema(description = "Raw Cart Data collected")
  public Object getCartData() {
    return cartData;
  }

  public void setCartData(Object cartData) {
    this.cartData = cartData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartEmail cartEmail = (CartEmail) o;
    return Objects.equals(this.cartEmailId, cartEmail.cartEmailId) &&
        Objects.equals(this.createdAt, cartEmail.createdAt) &&
        Objects.equals(this.email, cartEmail.email) &&
        Objects.equals(this.cartData, cartEmail.cartData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cartEmailId, createdAt, email, cartData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartEmail {\n");
    
    sb.append("    cartEmailId: ").append(toIndentedString(cartEmailId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    cartData: ").append(toIndentedString(cartData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
