/*
 * Developer API
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v2`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Models;

import java.util.Objects;
import java.util.Arrays;
import Models.Survey;
import Models.Ticket;
import Models.Transaction;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Order
 */


public class Order {
  @SerializedName("orderId")
  private Integer orderId = null;

  @SerializedName("dateTime")
  private String dateTime = null;

  @SerializedName("testOrder")
  private Boolean testOrder = null;

  @SerializedName("orderType")
  private String orderType = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("mobilePhone")
  private String mobilePhone = null;

  @SerializedName("street")
  private String street = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("stateProvince")
  private String stateProvince = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("fees")
  private String fees = null;

  @SerializedName("taxes")
  private String taxes = null;

  @SerializedName("donations")
  private String donations = null;

  @SerializedName("grandTotal")
  private String grandTotal = null;

  @SerializedName("coupons")
  private Integer coupons = null;

  @SerializedName("couponsTotal")
  private Integer couponsTotal = null;

  @SerializedName("IPAddress")
  private String ipAddress = null;

  @SerializedName("browserName")
  private String browserName = null;

  @SerializedName("browserDevice")
  private String browserDevice = null;

  @SerializedName("sourceCode")
  private String sourceCode = null;

  @SerializedName("searchTag")
  private String searchTag = null;

  @SerializedName("survey")
  private List<Survey> survey = null;

  @SerializedName("_transactions")
  private List<Transaction> _transactions = null;

  @SerializedName("_tickets")
  private List<Ticket> _tickets = null;

  @SerializedName("_posCashierName")
  private String _posCashierName = null;

  public Order orderId(Integer orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * The order ID
   * @return orderId
  **/
  @Schema(description = "The order ID")
  public Integer getOrderId() {
    return orderId;
  }

  public void setOrderId(Integer orderId) {
    this.orderId = orderId;
  }

  public Order dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * The order time iso-8601
   * @return dateTime
  **/
  @Schema(description = "The order time iso-8601")
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }

  public Order testOrder(Boolean testOrder) {
    this.testOrder = testOrder;
    return this;
  }

   /**
   * True indicates a test order
   * @return testOrder
  **/
  @Schema(description = "True indicates a test order")
  public Boolean isTestOrder() {
    return testOrder;
  }

  public void setTestOrder(Boolean testOrder) {
    this.testOrder = testOrder;
  }

  public Order orderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * web | pos | kiosk
   * @return orderType
  **/
  @Schema(description = "web | pos | kiosk")
  public String getOrderType() {
    return orderType;
  }

  public void setOrderType(String orderType) {
    this.orderType = orderType;
  }

  public Order firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Customer first name
   * @return firstName
  **/
  @Schema(description = "Customer first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Order lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Customer last name
   * @return lastName
  **/
  @Schema(description = "Customer last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Order email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Customer email address
   * @return email
  **/
  @Schema(description = "Customer email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Order phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Customer phone number
   * @return phone
  **/
  @Schema(description = "Customer phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Order mobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
    return this;
  }

   /**
   * Customer mobile phone number
   * @return mobilePhone
  **/
  @Schema(description = "Customer mobile phone number")
  public String getMobilePhone() {
    return mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }

  public Order street(String street) {
    this.street = street;
    return this;
  }

   /**
   * Customer street address
   * @return street
  **/
  @Schema(description = "Customer street address")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public Order city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Customer city
   * @return city
  **/
  @Schema(description = "Customer city")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Order stateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
    return this;
  }

   /**
   * Customer state or province name
   * @return stateProvince
  **/
  @Schema(description = "Customer state or province name")
  public String getStateProvince() {
    return stateProvince;
  }

  public void setStateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
  }

  public Order country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Customer country
   * @return country
  **/
  @Schema(description = "Customer country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Order postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Customer postal code / zip
   * @return postalCode
  **/
  @Schema(description = "Customer postal code / zip")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Order fees(String fees) {
    this.fees = fees;
    return this;
  }

   /**
   * Organization charged service fee
   * @return fees
  **/
  @Schema(description = "Organization charged service fee")
  public String getFees() {
    return fees;
  }

  public void setFees(String fees) {
    this.fees = fees;
  }

  public Order taxes(String taxes) {
    this.taxes = taxes;
    return this;
  }

   /**
   * Organization charged taxes
   * @return taxes
  **/
  @Schema(description = "Organization charged taxes")
  public String getTaxes() {
    return taxes;
  }

  public void setTaxes(String taxes) {
    this.taxes = taxes;
  }

  public Order donations(String donations) {
    this.donations = donations;
    return this;
  }

   /**
   * Organization charged donations
   * @return donations
  **/
  @Schema(description = "Organization charged donations")
  public String getDonations() {
    return donations;
  }

  public void setDonations(String donations) {
    this.donations = donations;
  }

  public Order grandTotal(String grandTotal) {
    this.grandTotal = grandTotal;
    return this;
  }

   /**
   * Total charges
   * @return grandTotal
  **/
  @Schema(description = "Total charges")
  public String getGrandTotal() {
    return grandTotal;
  }

  public void setGrandTotal(String grandTotal) {
    this.grandTotal = grandTotal;
  }

  public Order coupons(Integer coupons) {
    this.coupons = coupons;
    return this;
  }

   /**
   * Coupons
   * @return coupons
  **/
  @Schema(description = "Coupons")
  public Integer getCoupons() {
    return coupons;
  }

  public void setCoupons(Integer coupons) {
    this.coupons = coupons;
  }

  public Order couponsTotal(Integer couponsTotal) {
    this.couponsTotal = couponsTotal;
    return this;
  }

   /**
   * Coupons Total
   * @return couponsTotal
  **/
  @Schema(description = "Coupons Total")
  public Integer getCouponsTotal() {
    return couponsTotal;
  }

  public void setCouponsTotal(Integer couponsTotal) {
    this.couponsTotal = couponsTotal;
  }

  public Order ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Customer IP Address
   * @return ipAddress
  **/
  @Schema(description = "Customer IP Address")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public Order browserName(String browserName) {
    this.browserName = browserName;
    return this;
  }

   /**
   * Customer Browser
   * @return browserName
  **/
  @Schema(description = "Customer Browser")
  public String getBrowserName() {
    return browserName;
  }

  public void setBrowserName(String browserName) {
    this.browserName = browserName;
  }

  public Order browserDevice(String browserDevice) {
    this.browserDevice = browserDevice;
    return this;
  }

   /**
   * mobile | desktop
   * @return browserDevice
  **/
  @Schema(description = "mobile | desktop")
  public String getBrowserDevice() {
    return browserDevice;
  }

  public void setBrowserDevice(String browserDevice) {
    this.browserDevice = browserDevice;
  }

  public Order sourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
    return this;
  }

   /**
   * Source code passed to the purchase interface s&#x3D;myTrackingCode
   * @return sourceCode
  **/
  @Schema(description = "Source code passed to the purchase interface s=myTrackingCode")
  public String getSourceCode() {
    return sourceCode;
  }

  public void setSourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
  }

  public Order searchTag(String searchTag) {
    this.searchTag = searchTag;
    return this;
  }

   /**
   * Custom searchTag applied to order to bookmark it
   * @return searchTag
  **/
  @Schema(description = "Custom searchTag applied to order to bookmark it")
  public String getSearchTag() {
    return searchTag;
  }

  public void setSearchTag(String searchTag) {
    this.searchTag = searchTag;
  }

  public Order survey(List<Survey> survey) {
    this.survey = survey;
    return this;
  }

  public Order addSurveyItem(Survey surveyItem) {
    if (this.survey == null) {
      this.survey = new ArrayList<Survey>();
    }
    this.survey.add(surveyItem);
    return this;
  }

   /**
   * Array of additional form question responses
   * @return survey
  **/
  @Schema(description = "Array of additional form question responses")
  public List<Survey> getSurvey() {
    return survey;
  }

  public void setSurvey(List<Survey> survey) {
    this.survey = survey;
  }

  public Order _transactions(List<Transaction> _transactions) {
    this._transactions = _transactions;
    return this;
  }

  public Order addTransactionsItem(Transaction _transactionsItem) {
    if (this._transactions == null) {
      this._transactions = new ArrayList<Transaction>();
    }
    this._transactions.add(_transactionsItem);
    return this;
  }

   /**
   * Array of payment/refund transactions
   * @return _transactions
  **/
  @Schema(description = "Array of payment/refund transactions")
  public List<Transaction> getTransactions() {
    return _transactions;
  }

  public void setTransactions(List<Transaction> _transactions) {
    this._transactions = _transactions;
  }

  public Order _tickets(List<Ticket> _tickets) {
    this._tickets = _tickets;
    return this;
  }

  public Order addTicketsItem(Ticket _ticketsItem) {
    if (this._tickets == null) {
      this._tickets = new ArrayList<Ticket>();
    }
    this._tickets.add(_ticketsItem);
    return this;
  }

   /**
   * Array of tickets ordered
   * @return _tickets
  **/
  @Schema(description = "Array of tickets ordered")
  public List<Ticket> getTickets() {
    return _tickets;
  }

  public void setTickets(List<Ticket> _tickets) {
    this._tickets = _tickets;
  }

  public Order _posCashierName(String _posCashierName) {
    this._posCashierName = _posCashierName;
    return this;
  }

   /**
   * Applicable to pos orders
   * @return _posCashierName
  **/
  @Schema(description = "Applicable to pos orders")
  public String getPosCashierName() {
    return _posCashierName;
  }

  public void setPosCashierName(String _posCashierName) {
    this._posCashierName = _posCashierName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this.orderId, order.orderId) &&
        Objects.equals(this.dateTime, order.dateTime) &&
        Objects.equals(this.testOrder, order.testOrder) &&
        Objects.equals(this.orderType, order.orderType) &&
        Objects.equals(this.firstName, order.firstName) &&
        Objects.equals(this.lastName, order.lastName) &&
        Objects.equals(this.email, order.email) &&
        Objects.equals(this.phone, order.phone) &&
        Objects.equals(this.mobilePhone, order.mobilePhone) &&
        Objects.equals(this.street, order.street) &&
        Objects.equals(this.city, order.city) &&
        Objects.equals(this.stateProvince, order.stateProvince) &&
        Objects.equals(this.country, order.country) &&
        Objects.equals(this.postalCode, order.postalCode) &&
        Objects.equals(this.fees, order.fees) &&
        Objects.equals(this.taxes, order.taxes) &&
        Objects.equals(this.donations, order.donations) &&
        Objects.equals(this.grandTotal, order.grandTotal) &&
        Objects.equals(this.coupons, order.coupons) &&
        Objects.equals(this.couponsTotal, order.couponsTotal) &&
        Objects.equals(this.ipAddress, order.ipAddress) &&
        Objects.equals(this.browserName, order.browserName) &&
        Objects.equals(this.browserDevice, order.browserDevice) &&
        Objects.equals(this.sourceCode, order.sourceCode) &&
        Objects.equals(this.searchTag, order.searchTag) &&
        Objects.equals(this.survey, order.survey) &&
        Objects.equals(this._transactions, order._transactions) &&
        Objects.equals(this._tickets, order._tickets) &&
        Objects.equals(this._posCashierName, order._posCashierName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, dateTime, testOrder, orderType, firstName, lastName, email, phone, mobilePhone, street, city, stateProvince, country, postalCode, fees, taxes, donations, grandTotal, coupons, couponsTotal, ipAddress, browserName, browserDevice, sourceCode, searchTag, survey, _transactions, _tickets, _posCashierName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    testOrder: ").append(toIndentedString(testOrder)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    donations: ").append(toIndentedString(donations)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    coupons: ").append(toIndentedString(coupons)).append("\n");
    sb.append("    couponsTotal: ").append(toIndentedString(couponsTotal)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    browserName: ").append(toIndentedString(browserName)).append("\n");
    sb.append("    browserDevice: ").append(toIndentedString(browserDevice)).append("\n");
    sb.append("    sourceCode: ").append(toIndentedString(sourceCode)).append("\n");
    sb.append("    searchTag: ").append(toIndentedString(searchTag)).append("\n");
    sb.append("    survey: ").append(toIndentedString(survey)).append("\n");
    sb.append("    _transactions: ").append(toIndentedString(_transactions)).append("\n");
    sb.append("    _tickets: ").append(toIndentedString(_tickets)).append("\n");
    sb.append("    _posCashierName: ").append(toIndentedString(_posCashierName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
